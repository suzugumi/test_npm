{"version":3,"sources":["test2.scss","main.scss","_spritesheet2.scss"],"names":[],"mappings":"AACA;EACI,uBAAsB;CACzB;;ACAD;EACI,YAAW;EACX,oCAA2B;EAA3B,4BAA2B;EAC3B,mBAAkB;EAClB,iEAA8D;EAA9D,+DAA8D;EAC9D,yBAAgB;EAAhB,iBAAgB;EAChB,mBAAkB;CACrB;;AAED;EC8EE,qDAAuB;EALvB,6BAhEgC;EAsDhC,aAtDuC;EA0DvC,cA1D8C;CDP/C;;AAED;EC0EE,qDAAuB;EALvB,gCArDqC;EA2CrC,aA3C4C;EA+C5C,cA/CmD;CDdpD;;AAED;EACI,kDAAiD;EACjD,uBAAsB;EACtB,aAAY;EACZ,cAAa;CAChB;;AAED;EACI,iBAAgB;EAChB,sBAAqB;CACxB","file":"main.css","sourcesContent":["// _つけてるからcssセイセイされない\r\na {\r\n    background: lightgreen;\r\n}","@charset\"UTF-8\";\r\n@import\"test2\";\r\n@import\"spritesheet2\";\r\n.test {\r\n    color: blue;\r\n    transition: ease-in-out .4s;\r\n    border-radius: 50%;\r\n    background-image: linear-gradient(to bottom, #a0c7e5, #1E5799);\r\n    transition: 0.4s;\r\n    text-align: center;\r\n}\r\n\r\n.food0 {\r\n    @include sprite($sprite-food0);\r\n}\r\n\r\n.food2 {\r\n    @include sprite($sprite-food2);\r\n}\r\n\r\n.a {\r\n    background: url(../../images/food0.jpg) no-repeat;\r\n    background-size: cover;\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n\r\nbody {\r\n    background: pink;\r\n    color: mediumseagreen;\r\n}","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$sprite-food0-name: 'sprite-food0';\n$sprite-food0-x: 0px;\n$sprite-food0-y: 0px;\n$sprite-food0-offset-x: 0px;\n$sprite-food0-offset-y: 0px;\n$sprite-food0-width: 500px;\n$sprite-food0-height: 332px;\n$sprite-food0-total-width: 1000px;\n$sprite-food0-total-height: 664px;\n$sprite-food0-image: '../../images/spritesheet2.png';\n$sprite-food0: (0px, 0px, 0px, 0px, 500px, 332px, 1000px, 664px, '../../images/spritesheet2.png', 'sprite-food0', );\n$sprite-food2-name: 'sprite-food2';\n$sprite-food2-x: 500px;\n$sprite-food2-y: 0px;\n$sprite-food2-offset-x: -500px;\n$sprite-food2-offset-y: 0px;\n$sprite-food2-width: 500px;\n$sprite-food2-height: 332px;\n$sprite-food2-total-width: 1000px;\n$sprite-food2-total-height: 664px;\n$sprite-food2-image: '../../images/spritesheet2.png';\n$sprite-food2: (500px, 0px, -500px, 0px, 500px, 332px, 1000px, 664px, '../../images/spritesheet2.png', 'sprite-food2', );\n$sprite-food3-name: 'sprite-food3';\n$sprite-food3-x: 0px;\n$sprite-food3-y: 332px;\n$sprite-food3-offset-x: 0px;\n$sprite-food3-offset-y: -332px;\n$sprite-food3-width: 500px;\n$sprite-food3-height: 332px;\n$sprite-food3-total-width: 1000px;\n$sprite-food3-total-height: 664px;\n$sprite-food3-image: '../../images/spritesheet2.png';\n$sprite-food3: (0px, 332px, 0px, -332px, 500px, 332px, 1000px, 664px, '../../images/spritesheet2.png', 'sprite-food3', );\n$spritesheet-width: 1000px;\n$spritesheet-height: 664px;\n$spritesheet-image: '../../images/spritesheet2.png';\n$spritesheet-sprites: ($sprite-food0, $sprite-food2, $sprite-food3, );\n$spritesheet: (1000px, 664px, '../../images/spritesheet2.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n"]}